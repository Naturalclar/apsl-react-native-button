// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Renders 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Button Renders disabled 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "borderRadius": 8,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "center",
        "marginBottom": 10,
      },
      undefined,
      Object {
        "opacity": 0.5,
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Disabled button
  </Text>
</View>
`;

exports[`Button Renders loading 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "borderRadius": 8,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 44,
        "justifyContent": "center",
        "marginBottom": 10,
      },
      undefined,
      Object {
        "opacity": 0.5,
      },
    ]
  }
>
  <ActivityIndicator
    animating={true}
    color="black"
    hidesWhenStopped={true}
    size="small"
    style={
      Object {
        "alignSelf": "center",
      }
    }
  />
</View>
`;

exports[`Button Renders with a inner View 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
>
  <View />
</View>
`;

exports[`Button Should contain children 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;

exports[`Button Should react to the onPress event 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 44,
      "justifyContent": "center",
      "marginBottom": 10,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "fontSize": 18,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Press me!
  </Text>
</View>
`;
